# ═══════════════════════════════════════════════════════════
# COMANDOS RÁPIDOS PARA GITHUB - Bagus Browser Go
# ═══════════════════════════════════════════════════════════

# ────────────────────────────────────────────────────────────
# SETUP INICIAL (PRIMEIRA VEZ)
# ────────────────────────────────────────────────────────────

# Opção 1: Automático (Recomendado)
./scripts/setup-github.sh

# Opção 2: Manual
git init
git branch -M main
git remote add origin git@github.com:peder1981/bagus-browser-go.git
git add .
git commit -m "Initial commit: Bagus Browser Go v2.0.0-alpha"
git push -u origin main

# ────────────────────────────────────────────────────────────
# PUBLICAÇÃO RÁPIDA (USO DIÁRIO)
# ────────────────────────────────────────────────────────────

# Linux/macOS
./scripts/publish.sh "feat: sua mensagem aqui"

# Windows (CMD)
scripts\publish.bat feat: sua mensagem aqui

# Windows (PowerShell)
.\scripts\publish.ps1 -Message "feat: sua mensagem aqui"

# ────────────────────────────────────────────────────────────
# COMANDOS GIT ÚTEIS
# ────────────────────────────────────────────────────────────

# Ver status
git status

# Ver histórico
git log --oneline -10

# Ver diferenças
git diff

# Desfazer último commit (mantém mudanças)
git reset --soft HEAD~1

# Desfazer mudanças não commitadas
git checkout -- .

# Atualizar do GitHub
git pull origin main

# Ver branches
git branch -a

# Criar nova branch
git checkout -b feature/nome-da-feature

# Mudar de branch
git checkout main

# Merge de branch
git merge feature/nome-da-feature

# Deletar branch local
git branch -d feature/nome-da-feature

# Deletar branch remota
git push origin --delete feature/nome-da-feature

# ────────────────────────────────────────────────────────────
# CONFIGURAR SSH (PRIMEIRA VEZ)
# ────────────────────────────────────────────────────────────

# Gerar chave SSH
ssh-keygen -t ed25519 -C "seu-email@example.com"

# Adicionar ao ssh-agent
eval "$(ssh-agent -s)"
ssh-add ~/.ssh/id_ed25519

# Ver chave pública (copiar para GitHub)
cat ~/.ssh/id_ed25519.pub

# Testar conexão
ssh -T git@github.com

# ────────────────────────────────────────────────────────────
# TIPOS DE COMMIT (CONVENTIONAL COMMITS)
# ────────────────────────────────────────────────────────────

# Nova funcionalidade
./scripts/publish.sh "feat: adiciona modo leitura"

# Correção de bug
./scripts/publish.sh "fix: corrige navegação de abas"

# Documentação
./scripts/publish.sh "docs: atualiza manual do usuário"

# Refatoração
./scripts/publish.sh "refactor: melhora estrutura do engine"

# Testes
./scripts/publish.sh "test: adiciona testes de integração"

# Performance
./scripts/publish.sh "perf: otimiza carregamento de páginas"

# Build/CI
./scripts/publish.sh "build: atualiza scripts de build"

# Estilo/Formatação
./scripts/publish.sh "style: formata código"

# Outros
./scripts/publish.sh "chore: atualiza dependências"

# ────────────────────────────────────────────────────────────
# CRIAR RELEASE/TAG
# ────────────────────────────────────────────────────────────

# Criar tag
git tag -a v2.0.0-alpha -m "Release v2.0.0-alpha"

# Enviar tag para GitHub
git push origin v2.0.0-alpha

# Enviar todas as tags
git push --tags

# Listar tags
git tag -l

# Deletar tag local
git tag -d v2.0.0-alpha

# Deletar tag remota
git push origin --delete v2.0.0-alpha

# ────────────────────────────────────────────────────────────
# RESOLVER CONFLITOS
# ────────────────────────────────────────────────────────────

# Atualizar com rebase
git pull origin main --rebase

# Se houver conflitos, resolver e:
git add .
git rebase --continue

# Ou abortar rebase
git rebase --abort

# ────────────────────────────────────────────────────────────
# STASH (GUARDAR MUDANÇAS TEMPORARIAMENTE)
# ────────────────────────────────────────────────────────────

# Guardar mudanças
git stash

# Listar stashes
git stash list

# Aplicar último stash
git stash pop

# Aplicar stash específico
git stash apply stash@{0}

# Deletar stash
git stash drop stash@{0}

# Limpar todos os stashes
git stash clear

# ────────────────────────────────────────────────────────────
# VERIFICAR CONFIGURAÇÃO
# ────────────────────────────────────────────────────────────

# Ver configuração do Git
git config --list

# Ver remote
git remote -v

# Configurar nome e email (se necessário)
git config --global user.name "Seu Nome"
git config --global user.email "seu-email@example.com"

# ────────────────────────────────────────────────────────────
# LINKS ÚTEIS
# ────────────────────────────────────────────────────────────

# Criar repositório: https://github.com/new
# Adicionar SSH key: https://github.com/settings/keys
# Ver repositório: https://github.com/peder1981/bagus-browser-go
# Documentação Git: https://git-scm.com/doc
# GitHub Docs: https://docs.github.com

# ═══════════════════════════════════════════════════════════
# FIM - Copie e cole os comandos conforme necessário
# ═══════════════════════════════════════════════════════════
